#!/usr/bin/env python3

import json
import os
import shutil
import sys
import getopt

argv = sys.argv[1:]

config_file = None
version = None
name = None

opts, args = getopt.getopt(argv, 'v:n:', ['version=', 'name='])

for opt, arg in opts:
    if opt == '-n' or opt == '--name':
        name = arg
        config_file = './configs/' + arg + '.json'
    if opt == '-v' or opt == '--version':
        version = arg
print(name, config_file, version)

config_file = open(config_file)
config_data = config_file.read()
config = json.loads(config_data)

files = config.get('files')
options = config.get('options')

dist_dir = os.path.join(os.getcwd(), 'firmware_dist')

if not os.path.isdir(dist_dir):
  os.mkdir(dist_dir)

build_dir = os.path.join(dist_dir, name)
if os.path.isdir(build_dir):
  for file in os.listdir(build_dir):
    path = os.path.join(build_dir, file)
    try:
        shutil.rmtree(path)
    except OSError:
        os.remove(path)
else:
  os.mkdir(build_dir)

def copy(entry):
  print("Processing", entry)
  from_path = os.path.join(os.getcwd(), 'firmware', entry)
  to_path = os.path.join(build_dir, entry)

  if os.path.isdir(from_path):
    os.mkdir(to_path)
    for _entry in os.listdir(from_path):
      copy(os.path.join(entry, _entry))
  else:
    shutil.copy(from_path, to_path)

for entry in files:
  copy(entry)

print('Updating config')
file_config = open(os.path.join(build_dir, 'config.py'), 'a')
file_config.write('KEYBOARD_NAME=\'' + name + '\'')
file_config.write('\n')
file_config.write('FIRMWARE_VERSION=\'' + version + '\'')
file_config.write('\n')

for option in options:
  file_config.write(option)
  file_config.write('\n')

file_config.close()

print('Making ZIP')
shutil.make_archive(os.path.join(dist_dir, name + '-' + version), 'zip', build_dir)

print('Remove tmp path')
shutil.rmtree(build_dir)
